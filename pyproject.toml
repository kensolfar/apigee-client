[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "apigee-client"
description = "A Python SDK and CLI for interacting with the Apigee Edge Management API."
version = "0.2.0-alpha1"
authors = [
  { name="Ken Solorzano-Farrier", email="kener.solorzano@icloud.com" },
]
readme = "README.md"
requires-python = ">=3.7"
dependencies = [
    "certifi==2025.4.26",
    "charset-normalizer==3.4.2",
    "click==8.1.8",
    "coverage==7.8.0",
    "idna==3.10",
    "iniconfig==2.1.0",
    "packaging==25.0",
    "pluggy==1.5.0",
    "pytest==8.3.5",
    "pytest-cov==6.1.1",
    "pytest-mock==3.14.0",
    "requests==2.32.3",
    "importlib-metadata; python_version<\"3.10\"",
    "setuptools==80.1.0",
    "urllib3==2.4.0",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
license = "MIT"
license-files = ["LICEN[CS]E*"]

[project.urls]
Homepage = "https://github.com/kensolfar/apigee_client"
Issues = "https://github.com/kensolfar/apigee_client/issues"

[project.scripts]
apigee-client = "cli.proxy_cli:cli"

[tool.setuptools]
packages = ["apigee_sdk"]

[tool.semantic_release.pypi]
repository_url = "https://upload.pypi.org/legacy/"

[tool.semantic_release.remote.token]
env = "GH_TOKEN"
[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "/Users/crksf/Git/apigee-client"
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.branches.develop]
match = "(develop|Develop)"
prerelease = true
prerelease_token = "beta"

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = false
ignore_merge_commits = false

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

