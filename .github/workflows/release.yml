name: Publish Python 🐍 distribution 📦 to PyPI and TestPyPI
on: 
  push:
    branches:
      - main
      - develop

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Action | Semantic Version Release
      id: release
      uses: python-semantic-release/python-semantic-release@v9.21.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        git_committer_name: "github-actions"
        git_committer_email: "actions@users.noreply.github.com"
    - name: Update pyproject.toml with new version
      if: steps.release.outputs.released == 'true'
      run: NEW_VERSION=${{ steps.release.outputs.version }} && sed -i "s/^version = .*/version = \"${NEW_VERSION}\"/" pyproject.toml

  build:
    name: Build distribution 📦
    needs:
    - semantic-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  test:
    name: Run Tests 🧪
    needs:
    - build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: >-
        python3 -m pip install --upgrade pip
        && pip install -r requirements.txt
        && pip install pytest
    - name: Run tests
      run: pytest tests/

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: pypi-test
      url: https://test.pypi.org/p/apigee-client

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    if: github.ref == 'refs/heads/develop'  # Only run when changes are pushed to develop

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi production
      url: https://pypi.org/p/apigee-client
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution 📦 to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1